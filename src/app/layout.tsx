'use client'

import { Header } from '@/components/Header'
import '../styles/globals.css'
import type { Metadata } from 'next'
import { AuthContextProvider } from '@/contexts/AuthContext'
import { useRouter } from 'next/navigation'
import { EmptyHomePage } from '@/components/EmptyHomePage/EmptyHomePage'
import { useCookies } from '@/hooks/useCookies'
import { useEffect } from 'react'
import { APP_ROUTES } from '@/constants/app-routes'

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const { isAuthenticated } = useCookies()

  const { push } = useRouter()

  useEffect(() => {
    if (!isAuthenticated) {
      push(APP_ROUTES.public.EmptyHomePage)
    }
  }, [isAuthenticated, push])

  // parei aqui, problema de hydration resolvido
  // preciso resolver a parte que quando digito /perfil na url acima, no modo de prod ele não navega
  // pois o seu valor de isAuthenticated sempre esta sendo false,
  // mas se eu comentar o useEffect acima ele funciona porém o nome /perfil permanece da url, não é
  // limpado, mas o importante é que user não autenticado não pode navegar nas rotas privadas

  return (
    <html lang="pt-BR">
      <body className="bg-rose-200 p-4">
        <div className="rounded-xl max-w-[150rem] mx-auto my-auto">
          {!isAuthenticated && (
            <AuthContextProvider>
              <Header isAuthenticated={isAuthenticated} />
              <EmptyHomePage />
            </AuthContextProvider>
          )}

          {isAuthenticated && (
            <AuthContextProvider>
              <Header isAuthenticated={isAuthenticated} />
              {children}
            </AuthContextProvider>
          )}
        </div>
      </body>
    </html>
  )
}
